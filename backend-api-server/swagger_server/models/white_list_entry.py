# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class WhiteListEntry(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, site_id: str=None, site_base_url: str=None, site_added_date: date=None, site_information_link: str=None, whitelist_type: str=None, whitelist_name: str=None, whitelist_description: str=None, whitelist_logo: str=None, whitelist_url: str=None, company_name: str=None, company_street: str=None, company_zipcode: int=None, company_city: str=None, company_country: str=None, company_logo: str=None):  # noqa: E501
        """WhiteListEntry - a model defined in Swagger

        :param site_id: The site_id of this WhiteListEntry.  # noqa: E501
        :type site_id: str
        :param site_base_url: The site_base_url of this WhiteListEntry.  # noqa: E501
        :type site_base_url: str
        :param site_added_date: The site_added_date of this WhiteListEntry.  # noqa: E501
        :type site_added_date: date
        :param site_information_link: The site_information_link of this WhiteListEntry.  # noqa: E501
        :type site_information_link: str
        :param whitelist_type: The whitelist_type of this WhiteListEntry.  # noqa: E501
        :type whitelist_type: str
        :param whitelist_name: The whitelist_name of this WhiteListEntry.  # noqa: E501
        :type whitelist_name: str
        :param whitelist_description: The whitelist_description of this WhiteListEntry.  # noqa: E501
        :type whitelist_description: str
        :param whitelist_logo: The whitelist_logo of this WhiteListEntry.  # noqa: E501
        :type whitelist_logo: str
        :param whitelist_url: The whitelist_url of this WhiteListEntry.  # noqa: E501
        :type whitelist_url: str
        :param company_name: The company_name of this WhiteListEntry.  # noqa: E501
        :type company_name: str
        :param company_street: The company_street of this WhiteListEntry.  # noqa: E501
        :type company_street: str
        :param company_zipcode: The company_zipcode of this WhiteListEntry.  # noqa: E501
        :type company_zipcode: int
        :param company_city: The company_city of this WhiteListEntry.  # noqa: E501
        :type company_city: str
        :param company_country: The company_country of this WhiteListEntry.  # noqa: E501
        :type company_country: str
        :param company_logo: The company_logo of this WhiteListEntry.  # noqa: E501
        :type company_logo: str
        """
        self.swagger_types = {
            'site_id': str,
            'site_base_url': str,
            'site_added_date': date,
            'site_information_link': str,
            'whitelist_type': str,
            'whitelist_name': str,
            'whitelist_description': str,
            'whitelist_logo': str,
            'whitelist_url': str,
            'company_name': str,
            'company_street': str,
            'company_zipcode': int,
            'company_city': str,
            'company_country': str,
            'company_logo': str
        }

        self.attribute_map = {
            'site_id': 'site_id',
            'site_base_url': 'site_baseURL',
            'site_added_date': 'site-added-date',
            'site_information_link': 'site-information-link',
            'whitelist_type': 'whitelist_type',
            'whitelist_name': 'whitelist-name',
            'whitelist_description': 'whitelist-description',
            'whitelist_logo': 'whitelist-logo',
            'whitelist_url': 'whitelist-url',
            'company_name': 'company-name',
            'company_street': 'company-street',
            'company_zipcode': 'company-zipcode',
            'company_city': 'company-city',
            'company_country': 'company-country',
            'company_logo': 'company-logo'
        }
        self._site_id = site_id
        self._site_base_url = site_base_url
        self._site_added_date = site_added_date
        self._site_information_link = site_information_link
        self._whitelist_type = whitelist_type
        self._whitelist_name = whitelist_name
        self._whitelist_description = whitelist_description
        self._whitelist_logo = whitelist_logo
        self._whitelist_url = whitelist_url
        self._company_name = company_name
        self._company_street = company_street
        self._company_zipcode = company_zipcode
        self._company_city = company_city
        self._company_country = company_country
        self._company_logo = company_logo

    @classmethod
    def from_dict(cls, dikt) -> 'WhiteListEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The White-List-Entry of this WhiteListEntry.  # noqa: E501
        :rtype: WhiteListEntry
        """
        return util.deserialize_model(dikt, cls)

    @property
    def site_id(self) -> str:
        """Gets the site_id of this WhiteListEntry.

        ID as provided by the server  # noqa: E501

        :return: The site_id of this WhiteListEntry.
        :rtype: str
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id: str):
        """Sets the site_id of this WhiteListEntry.

        ID as provided by the server  # noqa: E501

        :param site_id: The site_id of this WhiteListEntry.
        :type site_id: str
        """

        self._site_id = site_id

    @property
    def site_base_url(self) -> str:
        """Gets the site_base_url of this WhiteListEntry.


        :return: The site_base_url of this WhiteListEntry.
        :rtype: str
        """
        return self._site_base_url

    @site_base_url.setter
    def site_base_url(self, site_base_url: str):
        """Sets the site_base_url of this WhiteListEntry.


        :param site_base_url: The site_base_url of this WhiteListEntry.
        :type site_base_url: str
        """

        self._site_base_url = site_base_url

    @property
    def site_added_date(self) -> date:
        """Gets the site_added_date of this WhiteListEntry.


        :return: The site_added_date of this WhiteListEntry.
        :rtype: date
        """
        return self._site_added_date

    @site_added_date.setter
    def site_added_date(self, site_added_date: date):
        """Sets the site_added_date of this WhiteListEntry.


        :param site_added_date: The site_added_date of this WhiteListEntry.
        :type site_added_date: date
        """

        self._site_added_date = site_added_date

    @property
    def site_information_link(self) -> str:
        """Gets the site_information_link of this WhiteListEntry.


        :return: The site_information_link of this WhiteListEntry.
        :rtype: str
        """
        return self._site_information_link

    @site_information_link.setter
    def site_information_link(self, site_information_link: str):
        """Sets the site_information_link of this WhiteListEntry.


        :param site_information_link: The site_information_link of this WhiteListEntry.
        :type site_information_link: str
        """

        self._site_information_link = site_information_link

    @property
    def whitelist_type(self) -> str:
        """Gets the whitelist_type of this WhiteListEntry.

        classification of whitelist type either a dedicated trustmark or other secure listing  # noqa: E501

        :return: The whitelist_type of this WhiteListEntry.
        :rtype: str
        """
        return self._whitelist_type

    @whitelist_type.setter
    def whitelist_type(self, whitelist_type: str):
        """Sets the whitelist_type of this WhiteListEntry.

        classification of whitelist type either a dedicated trustmark or other secure listing  # noqa: E501

        :param whitelist_type: The whitelist_type of this WhiteListEntry.
        :type whitelist_type: str
        """
        allowed_values = ["trustmark", "secure_listing"]  # noqa: E501
        if whitelist_type not in allowed_values:
            raise ValueError(
                "Invalid value for `whitelist_type` ({0}), must be one of {1}"
                .format(whitelist_type, allowed_values)
            )

        self._whitelist_type = whitelist_type

    @property
    def whitelist_name(self) -> str:
        """Gets the whitelist_name of this WhiteListEntry.


        :return: The whitelist_name of this WhiteListEntry.
        :rtype: str
        """
        return self._whitelist_name

    @whitelist_name.setter
    def whitelist_name(self, whitelist_name: str):
        """Sets the whitelist_name of this WhiteListEntry.


        :param whitelist_name: The whitelist_name of this WhiteListEntry.
        :type whitelist_name: str
        """

        self._whitelist_name = whitelist_name

    @property
    def whitelist_description(self) -> str:
        """Gets the whitelist_description of this WhiteListEntry.


        :return: The whitelist_description of this WhiteListEntry.
        :rtype: str
        """
        return self._whitelist_description

    @whitelist_description.setter
    def whitelist_description(self, whitelist_description: str):
        """Sets the whitelist_description of this WhiteListEntry.


        :param whitelist_description: The whitelist_description of this WhiteListEntry.
        :type whitelist_description: str
        """

        self._whitelist_description = whitelist_description

    @property
    def whitelist_logo(self) -> str:
        """Gets the whitelist_logo of this WhiteListEntry.


        :return: The whitelist_logo of this WhiteListEntry.
        :rtype: str
        """
        return self._whitelist_logo

    @whitelist_logo.setter
    def whitelist_logo(self, whitelist_logo: str):
        """Sets the whitelist_logo of this WhiteListEntry.


        :param whitelist_logo: The whitelist_logo of this WhiteListEntry.
        :type whitelist_logo: str
        """

        self._whitelist_logo = whitelist_logo

    @property
    def whitelist_url(self) -> str:
        """Gets the whitelist_url of this WhiteListEntry.


        :return: The whitelist_url of this WhiteListEntry.
        :rtype: str
        """
        return self._whitelist_url

    @whitelist_url.setter
    def whitelist_url(self, whitelist_url: str):
        """Sets the whitelist_url of this WhiteListEntry.


        :param whitelist_url: The whitelist_url of this WhiteListEntry.
        :type whitelist_url: str
        """

        self._whitelist_url = whitelist_url

    @property
    def company_name(self) -> str:
        """Gets the company_name of this WhiteListEntry.


        :return: The company_name of this WhiteListEntry.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name: str):
        """Sets the company_name of this WhiteListEntry.


        :param company_name: The company_name of this WhiteListEntry.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def company_street(self) -> str:
        """Gets the company_street of this WhiteListEntry.


        :return: The company_street of this WhiteListEntry.
        :rtype: str
        """
        return self._company_street

    @company_street.setter
    def company_street(self, company_street: str):
        """Sets the company_street of this WhiteListEntry.


        :param company_street: The company_street of this WhiteListEntry.
        :type company_street: str
        """

        self._company_street = company_street

    @property
    def company_zipcode(self) -> int:
        """Gets the company_zipcode of this WhiteListEntry.


        :return: The company_zipcode of this WhiteListEntry.
        :rtype: int
        """
        return self._company_zipcode

    @company_zipcode.setter
    def company_zipcode(self, company_zipcode: int):
        """Sets the company_zipcode of this WhiteListEntry.


        :param company_zipcode: The company_zipcode of this WhiteListEntry.
        :type company_zipcode: int
        """

        self._company_zipcode = company_zipcode

    @property
    def company_city(self) -> str:
        """Gets the company_city of this WhiteListEntry.


        :return: The company_city of this WhiteListEntry.
        :rtype: str
        """
        return self._company_city

    @company_city.setter
    def company_city(self, company_city: str):
        """Sets the company_city of this WhiteListEntry.


        :param company_city: The company_city of this WhiteListEntry.
        :type company_city: str
        """

        self._company_city = company_city

    @property
    def company_country(self) -> str:
        """Gets the company_country of this WhiteListEntry.


        :return: The company_country of this WhiteListEntry.
        :rtype: str
        """
        return self._company_country

    @company_country.setter
    def company_country(self, company_country: str):
        """Sets the company_country of this WhiteListEntry.


        :param company_country: The company_country of this WhiteListEntry.
        :type company_country: str
        """

        self._company_country = company_country

    @property
    def company_logo(self) -> str:
        """Gets the company_logo of this WhiteListEntry.


        :return: The company_logo of this WhiteListEntry.
        :rtype: str
        """
        return self._company_logo

    @company_logo.setter
    def company_logo(self, company_logo: str):
        """Sets the company_logo of this WhiteListEntry.


        :param company_logo: The company_logo of this WhiteListEntry.
        :type company_logo: str
        """

        self._company_logo = company_logo
